#!/usr/bin/env ruby
#
# PostprocessBuildPlayer
#   Tested on Ruby 1.8.7, Gem 1.3.6, and xcodeproj 0.3.0
#   Created by akisute (http://akisute.com)
#   Licensed under The MIT License: http://opensource.org/licenses/mit-license.php
#
require 'rubygems'
require 'pathname'
require 'xcoder'
 
#
# Define utility functions
#
def add_sys_framework_to_project(proj, framework_names, option=:required)
    proj.targets.each do |target|
        if target.name == "Unity-iPhone-simulator" then
            next
        end
        framework_names.each { |framework_name|
            fwork = proj.frameworks_group.create_system_framework framework_name
            target.framework_build_phase do
                add_build_file fwork
            end
        }
    end
end

def append_to_start_of_file(projpath, fname, line)
    newfile = File.new(projpath + fname + ".temp", "w")
    newfile.puts line;

    oldfile = File.open(projpath + fname, "r+")
    oldfile.each_line { |line| newfile.puts line}

    oldfile.close();
    newfile.close();

    File.delete(projpath + fname);
    File.rename(projpath + fname + ".temp", projpath + fname);
end

def add_remote_notifications_to_plist(projpath, fname)

end

#
# Define build directory path
# -> Will be suppried as argv if run by Unity
# -> Else, assume UNITY_PROJECT_ROOT/build is a build directory
#
buildpath = (ARGV[0]) ? ARGV[0] : File.expand_path(File.dirname($0)) + "/../../build"
puts "PostprocessBuildPlayer running on build directory: " + buildpath
 
#
# Add System frameworks required to build
#
projpath = buildpath + "/Unity-iPhone.xcodeproj"

project = Xcode.project(projpath)
add_sys_framework_to_project(project, ["MapKit", "CoreTelephony"], :required)
puts "Before proj.save_as(projpath)..."
project.save!

append_to_start_of_file(projpath, "/project_temp.pbxproj", "// !$*UTF8*$!")

add_remote_notifications_to_plist(projpath, "Info.plist")
